[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "RegistrationView",
        "importPath": "djoser.views",
        "description": "djoser.views",
        "isExtraImport": true,
        "detail": "djoser.views",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "importPath": "djoser.views",
        "description": "djoser.views",
        "isExtraImport": true,
        "detail": "djoser.views",
        "documentation": {}
    },
    {
        "label": "Messages",
        "importPath": "djoser.constants",
        "description": "djoser.constants",
        "isExtraImport": true,
        "detail": "djoser.constants",
        "documentation": {}
    },
    {
        "label": "validators",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "reset_queries",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "reset_queries",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "djoser.conf",
        "description": "djoser.conf",
        "isExtraImport": true,
        "detail": "djoser.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "djoser.conf",
        "description": "djoser.conf",
        "isExtraImport": true,
        "detail": "djoser.conf",
        "documentation": {}
    },
    {
        "label": "ContentFile",
        "importPath": "django.core.files.base",
        "description": "django.core.files.base",
        "isExtraImport": true,
        "detail": "django.core.files.base",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "default_token_generator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "UnicodeUsernameValidator",
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "UnicodeUsernameValidator",
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AnonymousUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "SlugRelatedField",
        "importPath": "rest_framework.relations",
        "description": "rest_framework.relations",
        "isExtraImport": true,
        "detail": "rest_framework.relations",
        "documentation": {}
    },
    {
        "label": "rest_framework.serializers",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "EmailField",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "ModelSerializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "Serializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "ListField",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "Recipe",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "RecipeIngredient",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "RecipeTag",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "Recipe",
        "importPath": "recipes.models",
        "description": "recipes.models",
        "isExtraImport": true,
        "detail": "recipes.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "TagReadOnlyModelViewSet",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "IngredientReadOnlyModelViewSet",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "RecipeModelViewSet",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ReadOnlyModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "TagModelSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "IngredientModelSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "RecipeReadModelSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "RecipeWriteModelSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "RecipeToFavoriteModelSerializer",
        "importPath": "api.serializers",
        "description": "api.serializers",
        "isExtraImport": true,
        "detail": "api.serializers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.db.models.expressions",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.expressions",
        "description": "django.db.models.expressions",
        "detail": "django.db.models.expressions",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "backend.api.apps",
        "description": "backend.api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "backend.api.apps",
        "documentation": {}
    },
    {
        "label": "r1",
        "kind": 5,
        "importPath": "backend.api.draft",
        "description": "backend.api.draft",
        "peekOfCode": "r1 = Recipe.objects.create(name='r1', text='r1-text', author=k, cooking_time=50, image='asd')\nr1.tags.add(t1, t2)\nri1 = RI(recipe=r1, ingredient=i1, amount=24)\nri2 = RI(recipe=r1, ingredient=i2, amount=3)\nri1.save()\nri2.save()\nr2 = Recipe.objects.create(name='r2', text='r2-text', author=k, cooking_time=30, image='asd', )\nr2.tags.add(t3)\nri3 = RI(recipe=r2, ingredient=i2, amount=70)\nri3.save()",
        "detail": "backend.api.draft",
        "documentation": {}
    },
    {
        "label": "ri1",
        "kind": 5,
        "importPath": "backend.api.draft",
        "description": "backend.api.draft",
        "peekOfCode": "ri1 = RI(recipe=r1, ingredient=i1, amount=24)\nri2 = RI(recipe=r1, ingredient=i2, amount=3)\nri1.save()\nri2.save()\nr2 = Recipe.objects.create(name='r2', text='r2-text', author=k, cooking_time=30, image='asd', )\nr2.tags.add(t3)\nri3 = RI(recipe=r2, ingredient=i2, amount=70)\nri3.save()\n{\n  \"ingredients\": [",
        "detail": "backend.api.draft",
        "documentation": {}
    },
    {
        "label": "ri2",
        "kind": 5,
        "importPath": "backend.api.draft",
        "description": "backend.api.draft",
        "peekOfCode": "ri2 = RI(recipe=r1, ingredient=i2, amount=3)\nri1.save()\nri2.save()\nr2 = Recipe.objects.create(name='r2', text='r2-text', author=k, cooking_time=30, image='asd', )\nr2.tags.add(t3)\nri3 = RI(recipe=r2, ingredient=i2, amount=70)\nri3.save()\n{\n  \"ingredients\": [\n    {",
        "detail": "backend.api.draft",
        "documentation": {}
    },
    {
        "label": "r2",
        "kind": 5,
        "importPath": "backend.api.draft",
        "description": "backend.api.draft",
        "peekOfCode": "r2 = Recipe.objects.create(name='r2', text='r2-text', author=k, cooking_time=30, image='asd', )\nr2.tags.add(t3)\nri3 = RI(recipe=r2, ingredient=i2, amount=70)\nri3.save()\n{\n  \"ingredients\": [\n    {\n      \"id\": 3,\n      \"amount\": 10\n    },",
        "detail": "backend.api.draft",
        "documentation": {}
    },
    {
        "label": "ri3",
        "kind": 5,
        "importPath": "backend.api.draft",
        "description": "backend.api.draft",
        "peekOfCode": "ri3 = RI(recipe=r2, ingredient=i2, amount=70)\nri3.save()\n{\n  \"ingredients\": [\n    {\n      \"id\": 3,\n      \"amount\": 10\n    },\n    {\n      \"id\": 1,",
        "detail": "backend.api.draft",
        "documentation": {}
    },
    {
        "label": "RecipeToFavoriteModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class RecipeToFavoriteModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Recipe\n        fields = (\n            'id',\n            'name',\n            'image',\n            'cooking_time',\n        )\n# class UserSerializer(DjoserUserSerializer):",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class UserSerializer(serializers.Serializer):\n    email = EmailField(\n        max_length=150,\n        read_only=True\n    )\n    id = IntegerField(\n        read_only=True\n    )\n    username = CharField(\n        max_length=150,",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "UserModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class UserModelSerializer(serializers.ModelSerializer):\n    is_subscribed = serializers.SerializerMethodField(read_only=True)\n    def get_is_subscribed(self, obj):\n        a = 1\n        user = self.context['request'].user\n        return user in obj.following.all()\n        # return user in obj.followers.all()\n    class Meta:\n        model = User\n        fields = (",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "UserSubscriptionsModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class UserSubscriptionsModelSerializer(serializers.ModelSerializer):\n    is_subscribed = serializers.SerializerMethodField(read_only=True)\n    def get_is_subscribed(self, obj):\n        a = 1\n        user = self.context['request'].user\n        return user in obj.following.all()\n        # return user in obj.followers.all()\n    recipes_count = serializers.SerializerMethodField(read_only=True)\n    def get_recipes_count(self, obj):\n        return obj.recipes.count()",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "ThinTagModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class ThinTagModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tag\n        fields = ('id',)\n        # extra_kwargs = {'id': {'write_only': True}}\nclass TagModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tag\n        fields = (\n            'id',",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "TagModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class TagModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Tag\n        fields = (\n            'id',\n            'name',\n            'color',\n            'slug',\n        )\nclass IngredientModelSerializer(serializers.ModelSerializer):",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "IngredientModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class IngredientModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Ingredient\n        fields = (\n            'id',\n            'name',\n            'measurement_unit',\n        )\nclass RecipeIngredientModelSerializer(serializers.ModelSerializer):\n    id = serializers.SerializerMethodField(read_only=True)",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "RecipeIngredientModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class RecipeIngredientModelSerializer(serializers.ModelSerializer):\n    id = serializers.SerializerMethodField(read_only=True)\n    def get_id(self, obj):\n        return obj.ingredient.pk\n        # return obj.ingredient_id\n    name = serializers.SerializerMethodField(read_only=True)\n    def get_name(self, obj):\n        return obj.ingredient.name\n    measurement_unit = serializers.SerializerMethodField(read_only=True)\n    def get_measurement_unit(self, obj):",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "RecipeReadModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class RecipeReadModelSerializer(serializers.ModelSerializer):\n    author = UserSerializer(  # UserModelSerializer\n        # read_only=True,\n        many=False,\n    )\n    tags = TagModelSerializer(\n        read_only=True,\n        many=True,\n    )\n    # \"is_in_shopping_cart\": true,",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "Base64ImageField",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class Base64ImageField(serializers.ImageField):\n    def to_internal_value(self, data):\n        if isinstance(data, str) and data.startswith('data:image'):\n            format, imgstr = data.split(';base64,')\n            ext = format.split('/')[-1]\n            data = ContentFile(base64.b64decode(imgstr), name='temp.' + ext)\n        return super().to_internal_value(data)\nclass ThinRecipeIngredientSerializer(Serializer):\n    id = serializers.IntegerField(\n        required=True,",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "ThinRecipeIngredientSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class ThinRecipeIngredientSerializer(Serializer):\n    id = serializers.IntegerField(\n        required=True,\n        min_value=1,\n        max_value=9223372036854775807,\n    )\n    amount = serializers.IntegerField(\n        required=True,\n        min_value=1,\n        max_value=32767,",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "RecipeWriteModelSerializer",
        "kind": 6,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "class RecipeWriteModelSerializer(serializers.ModelSerializer):\n    # tags = ThinTagModelSerializer(\n    #     required=True,\n    #     many=True,\n    # )\n    tags = ListField(\n        # required=True,\n        # many=True,\n    )\n    ingredients = ThinRecipeIngredientSerializer(",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.api.serializers",
        "description": "backend.api.serializers",
        "peekOfCode": "User = get_user_model()\nclass RecipeToFavoriteModelSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Recipe\n        fields = (\n            'id',\n            'name',\n            'image',\n            'cooking_time',\n        )",
        "detail": "backend.api.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "backend.api.urls",
        "description": "backend.api.urls",
        "peekOfCode": "app_name = 'api'\nrouter = DefaultRouter()\nrouter.register('users', UserViewSet, basename='users')\nrouter.register('tags', TagReadOnlyModelViewSet, basename='tags')\nrouter.register('ingredients', IngredientReadOnlyModelViewSet,\n                basename='ingredients')\nrouter.register('recipes', RecipeModelViewSet, basename='recipes')\nurlpatterns = [\n    path('', include(router.urls)),\n    # url(r'^', include(router.urls)),",
        "detail": "backend.api.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "backend.api.urls",
        "description": "backend.api.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register('users', UserViewSet, basename='users')\nrouter.register('tags', TagReadOnlyModelViewSet, basename='tags')\nrouter.register('ingredients', IngredientReadOnlyModelViewSet,\n                basename='ingredients')\nrouter.register('recipes', RecipeModelViewSet, basename='recipes')\nurlpatterns = [\n    path('', include(router.urls)),\n    # url(r'^', include(router.urls)),\n    path('auth/', include('djoser.urls.authtoken')),",
        "detail": "backend.api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.api.urls",
        "description": "backend.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n    # url(r'^', include(router.urls)),\n    path('auth/', include('djoser.urls.authtoken')),\n]",
        "detail": "backend.api.urls",
        "documentation": {}
    },
    {
        "label": "UserViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class UserViewSet(DjoserUserViewSet):\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        if self.action == 'list':\n            # queryset = queryset.prefetch_related('followers')\n            queryset = queryset.prefetch_related('following')\n        elif self.action == 'subscriptions':\n            user = self.request.user\n            queryset = user.following.all()\n        return queryset",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "TagReadOnlyModelViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class TagReadOnlyModelViewSet(ReadOnlyModelViewSet):\n    queryset = Tag.objects.all()\n    serializer_class = TagModelSerializer\n    pagination_class = None\nclass IngredientReadOnlyModelViewSet(ReadOnlyModelViewSet):\n    queryset = Ingredient.objects.all()\n    serializer_class = IngredientModelSerializer\n    pagination_class = None\nclass RecipeModelViewSet(ModelViewSet):\n    queryset = Recipe.objects.select_related(",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "IngredientReadOnlyModelViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class IngredientReadOnlyModelViewSet(ReadOnlyModelViewSet):\n    queryset = Ingredient.objects.all()\n    serializer_class = IngredientModelSerializer\n    pagination_class = None\nclass RecipeModelViewSet(ModelViewSet):\n    queryset = Recipe.objects.select_related(\n        'author',\n    ).prefetch_related(\n        'tags',\n        'ingredients',",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "RecipeModelViewSet",
        "kind": 6,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "class RecipeModelViewSet(ModelViewSet):\n    queryset = Recipe.objects.select_related(\n        'author',\n    ).prefetch_related(\n        'tags',\n        'ingredients',\n        'recipeingredient_set__ingredient',\n        'author__following',\n    )\n    http_method_names = [",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.api.views",
        "description": "backend.api.views",
        "peekOfCode": "User = get_user_model()\nclass UserViewSet(DjoserUserViewSet):\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        if self.action == 'list':\n            # queryset = queryset.prefetch_related('followers')\n            queryset = queryset.prefetch_related('following')\n        elif self.action == 'subscriptions':\n            user = self.request.user\n            queryset = user.following.all()",
        "detail": "backend.api.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.foodgram_backend.asgi",
        "description": "backend.foodgram_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "backend.foodgram_backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = 'django-insecure-(j5tdm_euxl=c@@!)!wi%d$cb%85&qz9j+(fmet&f*%3gqor2g'\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-(j5tdm_euxl=c@@!)!wi%d$cb%85&qz9j+(fmet&f*%3gqor2g'\nDEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework.authtoken',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework.authtoken',\n    'djoser',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'foodgram_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'foodgram_backend.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'\n# AUTH_USER_MODEL = 'users.models.User'\nLANGUAGE_CODE = 'ru-RU'  # 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'ru-RU'  # 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "USE_TZ = True\nSTATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication',",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# STATIC_URL = \"static/\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication',\n    ],",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication',\n    ],\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 6,",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.AllowAny'\n    ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication',\n    ],\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 6,\n}",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "DJOSER = {\n    'HIDE_USERS': False,\n    'SERIALIZERS': {\n        'user': 'api.serializers.UserSerializer',\n        # 'user': 'api.serializers.UserModelSerializer',\n    },\n    'PERMISSIONS': {\n        'user_list': ['rest_framework.permissions.AllowAny'],\n        # 'activation': ['rest_framework.permissions.AllowAny'],\n        # 'password_reset': ['rest_framework.permissions.AllowAny'],",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "INTERNAL_IPS = ['127.0.0.1',]\nCORS_ORIGIN_ALLOW_ALL = True\nCORS_URLS_REGEX = r'^/api/.*$'",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORIGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "CORS_ORIGIN_ALLOW_ALL = True\nCORS_URLS_REGEX = r'^/api/.*$'",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_URLS_REGEX",
        "kind": 5,
        "importPath": "backend.foodgram_backend.settings",
        "description": "backend.foodgram_backend.settings",
        "peekOfCode": "CORS_URLS_REGEX = r'^/api/.*$'",
        "detail": "backend.foodgram_backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.foodgram_backend.urls",
        "description": "backend.foodgram_backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    # path('__debug__/', include('debug_toolbar.urls')),\n    path('api/', include('api.urls', namespace='api')),\n]\nif settings.DEBUG:\n    urlpatterns.append(\n        path('__debug__/', include('debug_toolbar.urls')),\n    )",
        "detail": "backend.foodgram_backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.foodgram_backend.wsgi",
        "description": "backend.foodgram_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.foodgram_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "OrdersConfig",
        "kind": 6,
        "importPath": "backend.orders.apps",
        "description": "backend.orders.apps",
        "peekOfCode": "class OrdersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'orders'",
        "detail": "backend.orders.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.recipes.migrations.0001_initial",
        "description": "backend.recipes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Ingredient',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название ингредиента')),",
        "detail": "backend.recipes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.recipes.migrations.0002_initial",
        "description": "backend.recipes.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('recipes', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='recipe',\n            name='author',",
        "detail": "backend.recipes.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.recipes.migrations.0003_rename_measure_ingredient_measurement_unit",
        "description": "backend.recipes.migrations.0003_rename_measure_ingredient_measurement_unit",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('recipes', '0002_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='ingredient',\n            old_name='measure',\n            new_name='measurement_unit',\n        ),",
        "detail": "backend.recipes.migrations.0003_rename_measure_ingredient_measurement_unit",
        "documentation": {}
    },
    {
        "label": "RecipesConfig",
        "kind": 6,
        "importPath": "backend.recipes.apps",
        "description": "backend.recipes.apps",
        "peekOfCode": "class RecipesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'recipes'",
        "detail": "backend.recipes.apps",
        "documentation": {}
    },
    {
        "label": "Recipe",
        "kind": 6,
        "importPath": "backend.recipes.models",
        "description": "backend.recipes.models",
        "peekOfCode": "class Recipe(models.Model):\n    name = models.CharField(\n        max_length=150,\n        unique=True,\n        verbose_name='Название рецепта',\n    )\n    text = models.TextField(\n        verbose_name='Описание рецепта'\n    )\n    author = models.ForeignKey(",
        "detail": "backend.recipes.models",
        "documentation": {}
    },
    {
        "label": "Ingredient",
        "kind": 6,
        "importPath": "backend.recipes.models",
        "description": "backend.recipes.models",
        "peekOfCode": "class Ingredient(models.Model):\n    # MEASUREMENT_UNIT_CHOICES = ()\n    name = models.CharField(\n        max_length=150,\n        unique=True,\n        verbose_name='Название ингредиента',\n    )\n    measurement_unit = models.CharField(\n        max_length=50,\n        db_index=True,",
        "detail": "backend.recipes.models",
        "documentation": {}
    },
    {
        "label": "RecipeIngredient",
        "kind": 6,
        "importPath": "backend.recipes.models",
        "description": "backend.recipes.models",
        "peekOfCode": "class RecipeIngredient(models.Model):\n    recipe = models.ForeignKey(\n        to=Recipe,\n        on_delete=models.CASCADE,\n        verbose_name='Рецепт'\n    )\n    ingredient = models.ForeignKey(\n        to=Ingredient,\n        on_delete=models.CASCADE,\n        verbose_name='Ингредиенты'",
        "detail": "backend.recipes.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "backend.recipes.models",
        "description": "backend.recipes.models",
        "peekOfCode": "class Tag(models.Model):\n    \"\"\"\n    -- Тег\n    Атрибуты модели:\n        Название.\n        Цветовой код, например, #49B64E.\n        Slug.\n    Все поля обязательны для заполнения и уникальны.\n    \"\"\"\n    name = models.CharField(",
        "detail": "backend.recipes.models",
        "documentation": {}
    },
    {
        "label": "RecipeTag",
        "kind": 6,
        "importPath": "backend.recipes.models",
        "description": "backend.recipes.models",
        "peekOfCode": "class RecipeTag(models.Model):\n    recipe = models.ForeignKey(\n        Recipe,\n        on_delete=models.CASCADE,\n    )\n    tag = models.ForeignKey(\n        Tag,\n        on_delete=models.CASCADE,\n    )\n    class Meta:",
        "detail": "backend.recipes.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.recipes.models",
        "description": "backend.recipes.models",
        "peekOfCode": "User = get_user_model()\n# # фронт приложения:\n# # http://localhost/\n# # спецификацию (доки) API:\n# # http://localhost/api/docs/redoc.html\nclass Recipe(models.Model):\n    name = models.CharField(\n        max_length=150,\n        unique=True,\n        verbose_name='Название рецепта',",
        "detail": "backend.recipes.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.users.migrations.0001_initial",
        "description": "backend.users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('recipes', '0001_initial'),\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[",
        "detail": "backend.users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "backend.users.apps",
        "description": "backend.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "backend.users.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "backend.users.models",
        "description": "backend.users.models",
        "peekOfCode": "class User(AbstractUser):\n    USERNAME_FIELD = 'email'\n    REQUIRED_FIELDS = [\n        'username',\n        'first_name',\n        'last_name',\n    ]\n    username_validator = UnicodeUsernameValidator()\n    username = models.CharField(\n        max_length=150,",
        "detail": "backend.users.models",
        "documentation": {}
    },
    {
        "label": "Follow",
        "kind": 6,
        "importPath": "backend.users.models",
        "description": "backend.users.models",
        "peekOfCode": "class Follow(models.Model):\n    from_user = models.ForeignKey(\n        to=User,\n        on_delete=models.CASCADE,\n        related_name='subscribed_to',\n        verbose_name='Пользователь подписан'\n    )\n    to_user = models.ForeignKey(\n        to=User,\n        on_delete=models.CASCADE,",
        "detail": "backend.users.models",
        "documentation": {}
    },
    {
        "label": "Favorite",
        "kind": 6,
        "importPath": "backend.users.models",
        "description": "backend.users.models",
        "peekOfCode": "class Favorite(models.Model):\n    user = models.ForeignKey(\n        User,\n        on_delete=models.CASCADE,\n    )\n    recipe = models.ForeignKey(\n        'recipes.Recipe',\n        on_delete=models.CASCADE,\n    )\n    class Meta:",
        "detail": "backend.users.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'foodgram_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "measures",
        "kind": 5,
        "importPath": "data.define_measure",
        "description": "data.define_measure",
        "peekOfCode": "measures = {}\nwith open('ingredients.json', 'r') as file_json:\n    data = json.load(file_json)\nfor ingredient in data:\n    measurement_unit = ingredient['measurement_unit']\n    measures[measurement_unit] = measures.get(measurement_unit, 0) + 1\nwith open('measures.json', 'w', encoding='utf-8') as file_json:\n    data = json.dump(\n        obj=measures,\n        fp=file_json,",
        "detail": "data.define_measure",
        "documentation": {}
    }
]